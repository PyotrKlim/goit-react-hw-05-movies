{"version":3,"file":"static/js/695.bfd0c0c0.chunk.js","mappings":"mQACQA,EAASC,EAAQ,IAAjBD,KAEKE,GAAaC,EAAAA,EAAAA,IAAOH,EAAPG,CAAH,sJAOVC,EAAcD,EAAAA,GAAAA,IAAH,2FAKXE,EAAQF,EAAAA,GAAAA,IAAH,kIAMLG,EAASH,EAAAA,GAAAA,GAAH,0GAMNI,EAAWJ,EAAAA,GAAAA,GAAH,+CAGRK,EAAOL,EAAAA,GAAAA,IAAH,2FAKJM,EAAUN,EAAAA,GAAAA,IAAH,6G,SCmCpB,EAhEqB,WAAO,IAAD,IACzB,GAAkCO,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GADSC,EAAAA,EAAAA,MACQD,QAEjBE,GAAkBC,EAAAA,EAAAA,OAExBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBL,GACfM,MAAK,SAAAC,GAAI,OAAIR,EAAaQ,EAAjB,IACTC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,EAAlB,GACb,GAAE,CAACT,IAEJ,IAAMY,EAAYd,EAAUe,OAE5B,OACE,UAAC,EAAAC,SAAD,YACE,SAAC,EAAD,CAAgBC,GAAE,oBAAEb,EAAgBc,aAAlB,aAAE,EAAuBC,YAAzB,QAAiC,IAAnD,SAAwD,oBAGxD,UAAC,EAAD,YACE,gBACEC,OAAO,MACPC,IACErB,EAAUsB,YAAV,0CACuCtB,EAAUsB,aAC7ChC,EAAQ,KAEdiC,IAAI,YAGN,UAAC,EAAD,YACE,0BACGvB,EAAUwB,MAAM,IAAExB,EAAUyB,aAAa,QAE5C,yBAAG,eAAazB,EAAU0B,iBAC1B,wBAAI,eACJ,uBAAI1B,EAAU2B,YACd,wBAAI,YACJ,SAAC,EAAD,iBACGb,QADH,IACGA,OADH,EACGA,EAAWc,KAAI,gBAAGC,EAAH,EAAGA,GAAI7B,EAAP,EAAOA,UAAP,OACd,SAAC,EAAD,CAAc6B,GAAIA,EAAlB,SACG7B,GADwB6B,EADb,aAQtB,UAAC,EAAD,YACE,uBAAG,2BACH,UAAC,EAAD,YACE,SAAC,EAAAxC,KAAD,CAAM4B,GAAG,OAAOC,MAAOd,EAAgBc,MAAvC,SAA8C,UAG9C,SAAC,EAAA7B,KAAD,CAAM4B,GAAG,UAAUC,MAAOd,EAAgBc,MAA1C,SAAiD,mBAKrD,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails/MovieDetailsCSS.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nconst { Link } = require('react-router-dom');\n\nexport const GoBackLink = styled(Link)`\n  border: 1px solid #9e9e9e63;\n  border-radius: 6px;\n  padding-right: 2px;\n  padding-left: 2px;\n  text-decoration: none;\n`;\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\nexport const Movie = styled.div`\n  display: flex;\n  margin-top: 10px;\n  border-bottom: 1px solid grey;\n  box-shadow: grey 0px 2px 4px;\n`;\nexport const Genres = styled.ul`\n  display: flex;\n  list-style-type: none;\n  padding-left: 0;\n  margin-top: 0;\n`;\nexport const GenresLi = styled.li`\n  margin-right: 10px;\n`;\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n`;\nexport const InfoBox = styled.div`\n  border-bottom: 1px solid grey;\n  box-shadow: grey 0px 2px 4px;\n  padding: 10px;\n`;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport * as Css from './MovieDetailsCSS';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const params = useParams();\n  const movieId = params.movieId;\n\n  const locationDetails = useLocation();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(data => setMovieData(data))\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  const GenresArr = movieData.genres;\n\n  return (\n    <Suspense>\n      <Css.GoBackLink to={locationDetails.state?.from ?? '/'}>\n        &larr; Go back\n      </Css.GoBackLink>\n      <Css.Movie>\n        <img\n          height=\"300\"\n          src={\n            movieData.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movieData.poster_path}`\n              : require('img/poster.jpg')\n          }\n          alt=\"poster\"\n        />\n\n        <Css.Description>\n          <h1>\n            {movieData.title}({movieData.release_date})\n          </h1>\n          <p>User score: {movieData.vote_average}</p>\n          <h2>Overview </h2>\n          <p>{movieData.overview}</p>\n          <h3>Genres</h3>\n          <Css.Genres>\n            {GenresArr?.map(({ id, movieData }) => (\n              <Css.GenresLi id={id} key={id}>\n                {movieData}\n              </Css.GenresLi>\n            ))}\n          </Css.Genres>\n        </Css.Description>\n      </Css.Movie>\n      <Css.InfoBox>\n        <p>Additional infomation</p>\n        <Css.Info>\n          <Link to=\"cast\" state={locationDetails.state}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={locationDetails.state}>\n            Reviews\n          </Link>\n        </Css.Info>\n      </Css.InfoBox>\n      <Outlet />\n    </Suspense>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Link","require","GoBackLink","styled","Description","Movie","Genres","GenresLi","Info","InfoBox","useState","movieData","setMovieData","movieId","useParams","locationDetails","useLocation","useEffect","fetchMovieDetails","then","data","catch","err","console","error","GenresArr","genres","Suspense","to","state","from","height","src","poster_path","alt","title","release_date","vote_average","overview","map","id"],"sourceRoot":""}